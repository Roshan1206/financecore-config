server:
  port: 8081

customer:
  config:
    database:
      schema: fc_customer
    file:
      upload-dir: uploads
    auth:
      url: http://localhost:8090
      client:
        id: customer-service
        secret: customer-secret

spring:
  application:
    name: customer
  datasource:
    url: jdbc:postgresql://localhost:5432/finance_core?currentSchema=${customer.config.database.schema}
    username: postgres
    password: password
  jpa:
    properties:
      hibernate:
        default_schema: ${customer.config.database.schema}
    hibernate:
      ddl-auto: validate
  security:
    oauth2:
      client:
        registration:
          account-service:
            client_id: ${customer.config.auth.client.id}
            client_secret: ${customer.config.auth.client.secret}
            authorization-grant-type: client_credentials
            scopes: service.read,service.write,internal.api
            provider: auth-server
        provider:
          auth-server:
            token-uri: ${customer.config.auth.url}
    user:
      name: financecore
      password: password

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka


